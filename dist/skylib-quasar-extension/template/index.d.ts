export declare const template: {
    readonly "no-mixed-classes": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-label-prop": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-lang-var": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-m-btn": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-m-card": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-m-card-actions": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-m-card-section": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-m-expansion-item": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-m-field": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-m-form": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-m-input": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-m-item": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-m-knob": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-m-menu": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-m-option-group": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-m-popup-proxy": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-m-select": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-m-toggle": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-m-tooltip": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "sort-v-bind": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
};
//# sourceMappingURL=index.d.ts.map