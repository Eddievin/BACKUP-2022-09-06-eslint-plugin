export declare const skylibQuasarExtension: {
    readonly "test-utils/prefer-findQuasarComponent": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "test-utils/prefer-testComponents": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/no-mixed-classes": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/prefer-label-prop": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/prefer-lang-var": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/prefer-m-btn": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/prefer-m-card": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/prefer-m-card-actions": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/prefer-m-card-section": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/prefer-m-expansion-item": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/prefer-m-field": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/prefer-m-form": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/prefer-m-input": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/prefer-m-item": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/prefer-m-knob": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/prefer-m-menu": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/prefer-m-option-group": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/prefer-m-popup-proxy": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/prefer-m-select": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/prefer-m-toggle": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/prefer-m-tooltip": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "template/sort-v-bind": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "script/consistent-expose-arg": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "script/no-global-icons": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "script/no-global-lang": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "script/require-validateEmit-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "script/require-validateProps-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "extras/check-Props-extends": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "extras/check-Slots-extends": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "extras/no-OwnProps-extends": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "extras/no-OwnSlots-extends": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "extras/no-empty-interfaces": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "extras/prefer-OwnProps": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "extras/prefer-OwnSlots": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "extras/prefer-Props-interface": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "extras/prefer-Slots-interface": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "no-computed-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "no-ref-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "no-ref-undefined": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "require-prop-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "require-ref-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../misc/core/no-restricted-syntax").MessageId, [Partial<import("../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
};
//# sourceMappingURL=index.d.ts.map