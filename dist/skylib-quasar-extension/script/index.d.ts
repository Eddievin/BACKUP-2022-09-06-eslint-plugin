export declare const script: {
    readonly "consistent-expose-arg": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "no-global-icons": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "no-global-lang": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "require-validateEmit-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "require-validateProps-type-param": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/restrict-syntax").MessageId, [Partial<import("../../misc/core/restrict-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
};
//# sourceMappingURL=index.d.ts.map