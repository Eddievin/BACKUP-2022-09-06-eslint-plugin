export declare const array: {
    readonly "mixedFrom-include-array": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../typescript/core/no-restricted-syntax").MessageId, [Partial<import("../../typescript/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "mixedFrom-include-non-array": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../typescript/core/no-restricted-syntax").MessageId, [Partial<import("../../typescript/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-first": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/no-restricted-syntax").MessageId, [Partial<import("../../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-fromIterable": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/no-restricted-syntax").MessageId, [Partial<import("../../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-reverse": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../typescript/core/no-restricted-syntax").MessageId, [Partial<import("../../typescript/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-second": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/no-restricted-syntax").MessageId, [Partial<import("../../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-sort": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../typescript/core/no-restricted-syntax").MessageId, [Partial<import("../../typescript/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-third": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../misc/core/no-restricted-syntax").MessageId, [Partial<import("../../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    readonly "prefer-truncate": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../typescript/core/no-restricted-syntax").MessageId, [Partial<import("../../typescript/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
};
//# sourceMappingURL=index.d.ts.map