import * as utils from "../../../utils";
export declare const array: utils.PrefixKeys<{
    "mixedFrom-include-array": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../typescript/core/no-restricted-syntax").MessageId, [Partial<import("../../../typescript/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "mixedFrom-include-non-array": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../typescript/core/no-restricted-syntax").MessageId, [Partial<import("../../../typescript/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-first": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../misc/core/no-restricted-syntax").MessageId, [Partial<import("../../../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-fromIterable": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../misc/core/no-restricted-syntax").MessageId, [Partial<import("../../../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-reverse": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../typescript/core/no-restricted-syntax").MessageId, [Partial<import("../../../typescript/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-second": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../misc/core/no-restricted-syntax").MessageId, [Partial<import("../../../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-sort": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../typescript/core/no-restricted-syntax").MessageId, [Partial<import("../../../typescript/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-third": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../misc/core/no-restricted-syntax").MessageId, [Partial<import("../../../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-truncate": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../typescript/core/no-restricted-syntax").MessageId, [Partial<import("../../../typescript/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
}, "array/">;
//# sourceMappingURL=index.d.ts.map