import * as utils from "../../../utils";
export declare const object: utils.PrefixKeys<{
    "no-unfreeze": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../misc/core/no-restricted-syntax").MessageId, [Partial<import("../../../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-assign": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../misc/core/no-restricted-syntax").MessageId, [Partial<import("../../../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-clone": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../misc/core/no-restricted-syntax").MessageId, [Partial<import("../../../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-defineProperty": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../misc/core/no-restricted-syntax").MessageId, [Partial<import("../../../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-entries": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../misc/core/no-restricted-syntax").MessageId, [Partial<import("../../../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-getPrototypeOf": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../misc/core/no-restricted-syntax").MessageId, [Partial<import("../../../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-hasOwnProp": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../misc/core/no-restricted-syntax").MessageId, [Partial<import("../../../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-keys": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../misc/core/no-restricted-syntax").MessageId, [Partial<import("../../../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
    "prefer-values": import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleModule<import("../../../misc/core/no-restricted-syntax").MessageId, [Partial<import("../../../misc/core/no-restricted-syntax").Options> & {}], import("@typescript-eslint/utils/dist/ts-eslint/Rule").RuleListener>;
}, "object/">;
//# sourceMappingURL=index.d.ts.map